{"version":3,"sources":["App/components/Header.js","App/components/CardResult.js","App/components/Form.js","App/Automaton/automaton.js","App/Automaton/categories/charConst.js","App/Automaton/categories/keyword.js","App/Automaton/categories/identify.js","App/Automaton/categories/numConst.js","App/Automaton/categories/operator.js","App/Automaton/categories/separator.js","App/pages/home.js","App/index.js","index.js"],"names":["header","onSelect","activeKey","props","Header","Navbar","style","padding","Body","CardResult","tokens","tags","key","tag","Tag","localeCompare","color","paddingTop","Panel","bordered","List","size","hover","map","item","index","Item","FormSirio","useState","card","setCard","textArea","setTextArea","width","Form","fluid","FormGroup","ControlLabel","FormControl","rows","name","componentClass","value","onChange","v","ButtonToolbar","Button","appearance","onClick","trim","text","replaceAll","match","listaTokens","forEach","array","console","log","word","test","isCharConst","isIdentifier","aceptacion","estado","split","symbolo","isNumConst","isOperator","isSeparator","push","automaton","Home","Container","Content","height","maxWidth","display","alignItems","justifyContent","Col","Row","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.660e98ac.chunk.js","sourcesContent":["import {\r\n    Header,\r\n    Navbar\r\n} from 'rsuite';\r\n\r\nfunction header({onSelect, activeKey, ...props}) {\r\n\r\n    const logoStyle = {\r\n        padding: \"20px\",\r\n    };\r\n\r\n    return (\r\n        <Header>\r\n            <Navbar {...props}>\r\n                <Navbar.Header>\r\n                    <div style={logoStyle}>\r\n                        SIRIO\r\n                    </div>\r\n                </Navbar.Header>\r\n                <Navbar.Body>\r\n                </Navbar.Body>\r\n            </Navbar>\r\n        </Header>\r\n    );\r\n}\r\n\r\nexport default header;\r\n\r\n\r\n\r\n","import {\r\n    Panel,\r\n    List,\r\n    Tag\r\n} from 'rsuite';\r\n\r\nfunction CardResult({tokens, onSelect, activeKey, ...props}) {\r\n    //css\r\n    const panelStyle = {\r\n        paddingTop: \"5%\"\r\n    }\r\n\r\n\r\n    function tags(key) {\r\n        let tag = <Tag>No encontrado</Tag>\r\n\r\n        if (0 === key.localeCompare(\"Cadena de texto\")) {\r\n            tag = <Tag color=\"orange\">Cadena de texto</Tag>\r\n        }\r\n        if (0 === key.localeCompare(\"Palabra reservada\")) {\r\n            tag = <Tag color=\"blue\">Palabra reservadas</Tag>\r\n        }\r\n        if (0 === key.localeCompare(\"Identificador\")) {\r\n            tag = <Tag color=\"green\">Identificador</Tag>\r\n        }\r\n        if (0 === key.localeCompare(\"Constante Numerica\")) {\r\n            tag = <Tag color=\"violet\">Constante Numerica</Tag>\r\n        }\r\n        if (0 === key.localeCompare(\"Operador\")) {\r\n            tag = <Tag color=\"cyan\">Operador</Tag>\r\n        }\r\n        if (0 === key.localeCompare(\"Separador\")) {\r\n            tag = <Tag color=\"red\">Separador</Tag>\r\n        }\r\n\r\n        return tag\r\n    }\r\n\r\n    return (\r\n        <div style={panelStyle}>\r\n            <Panel bordered>\r\n                <List size=\"sm\" hover>\r\n                    {tokens.map((item, index) => (\r\n\r\n                        <List.Item key={item['key']} index={index}>\r\n                            {tags(item['key'])} &nbsp;&nbsp;&nbsp; {item['value']}\r\n                        </List.Item>\r\n\r\n\r\n                    ))}\r\n                </List>\r\n            </Panel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardResult;\r\n","import {\r\n    Form,\r\n    FormGroup,\r\n    FormControl,\r\n    ControlLabel,\r\n    Button,\r\n    ButtonToolbar,\r\n    Panel\r\n} from 'rsuite';\r\nimport CardResult from './CardResult';\r\nimport React, {useState} from 'react';\r\nimport automaton from \"../Automaton/automaton\";\r\n\r\nfunction FormSirio({onSelect, activeKey, ...props}) {\r\n    const [card, setCard] = useState();\r\n    const [textArea, setTextArea] = useState(\"\");\r\n\r\n    function showCard() {\r\n        if (0 !== textArea.trim().localeCompare(\"\")) {\r\n            let tokens = []\r\n            tokens = automaton(textArea.trim())\r\n            setCard(\r\n                <CardResult\r\n                    tokens={tokens}\r\n                />\r\n            )\r\n        } else {\r\n            setCard()\r\n        }\r\n    }\r\n\r\n    function clear() {\r\n        setTextArea(\"\")\r\n        setCard()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Panel header=\"Analizador lexico\" bordered style={{width: \"600px\"}}>\r\n                <p/>\r\n                <Form fluid>\r\n                    <FormGroup>\r\n                        <ControlLabel>Código Dart</ControlLabel>\r\n                        <FormControl rows={10} name=\"textarea\" componentClass=\"textarea\"\r\n                                     value={textArea} onChange={v => setTextArea(v)}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ButtonToolbar>\r\n                            <Button appearance=\"default\" color=\"green\" onClick={showCard}>Analizar</Button>\r\n                            <Button appearance=\"default\" onClick={clear}>Limpiar</Button>\r\n                        </ButtonToolbar>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Panel>\r\n            {card}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormSirio;\r\n","import isCharConst from \"./categories/charConst\";\r\nimport isIdentifier from \"./categories/identify\";\r\nimport isKeyword from \"./categories/keyword\";\r\nimport isNumConst from \"./categories/numConst\";\r\nimport isOperator from \"./categories/operator\";\r\nimport isSeparator from \"./categories/separator\";\r\n\r\nexport default function automaton(text) {\r\n    //let textoOriginal = text\r\n\r\n    //Se eliminan saltos de linea y tabulaciones\r\n    text = text.replaceAll(/\\n/g, \" \")\r\n    text = text.replaceAll(/\\t/g, \" \")\r\n\r\n\r\n    //Se aislan primero los signos que pueden generar cadenas de texto añadiendoles espacios.\r\n    //Los valores a reemplazar son \" y '\r\n    text = text.replaceAll(/\"/g, ' \" ')\r\n    text = text.replaceAll(/'/g, \" ' \")\r\n\r\n    //se aislan los delimitadores o separadores\r\n    text = text.replaceAll(/\\(/g, \" ( \")\r\n    text = text.replaceAll(/\\)/g, \" ) \")\r\n\r\n    text = text.replaceAll(/\\[/g, \" [ \")\r\n    text = text.replaceAll(/]/g, \" ] \")\r\n\r\n    text = text.replaceAll(/\\{/g, \" { \")\r\n    text = text.replaceAll(/}/g, \" } \")\r\n\r\n    text = text.replaceAll(/;/g, \" ; \")\r\n    text = text.replaceAll(/,/g, \" , \")\r\n\r\n    //Se aislan los operadores + - * / % < > = ! & | ^ ~  ??\r\n    text = text.replaceAll(/\\+/g, \" + \")\r\n    text = text.replaceAll(/-/g, \" - \")\r\n    text = text.replaceAll(/\\*/g, \" * \")\r\n    text = text.replaceAll(/\\//g, \"/ \")\r\n    text = text.replaceAll(/%/g, \" % \")\r\n    text = text.replaceAll(/</g, \" < \")\r\n    text = text.replaceAll(/>/g, \" > \")\r\n    text = text.replaceAll(/=/g, \" = \")\r\n    text = text.replaceAll(/!/g, \" ! \")\r\n    text = text.replaceAll(/&/g, \" & \")\r\n    text = text.replaceAll(/\\|/g, \" | \")\r\n    text = text.replaceAll(/\\^/g, \" ^ \")\r\n    text = text.replaceAll(/~/g, \" ~ \")\r\n    text = text.replaceAll(/\\?\\?/g, \" ?? \")\r\n\r\n    //Se reagrupan los operadores compuestos\r\n    text = text.replaceAll(/\\+\\s\\s\\+/g, \" ++ \")\r\n    text = text.replaceAll(/\\+\\s\\s=/g, \" += \")\r\n    text = text.replaceAll(/-\\s\\s-/g, \" -- \")\r\n    text = text.replaceAll(/-\\s\\s=/g, \" -= \")\r\n    text = text.replaceAll(/~\\s\\s\\//g, \" ~/ \")\r\n    text = text.replaceAll(/=\\s\\s=/g, \" == \")\r\n    text = text.replaceAll(/<\\s\\s=/g, \" <= \")\r\n    text = text.replaceAll(/>\\s\\s=/g, \" >= \")\r\n    text = text.replaceAll(/!\\s\\s=/g, \" != \")\r\n    text = text.replaceAll(/\\/\\s\\s=/g, \" /= \")\r\n    text = text.replaceAll(/\\*\\s\\s=/g, \" *= \")\r\n    text = text.replaceAll(/\\?\\?\\s\\s=/g, \" ??= \")\r\n    text = text.replaceAll(/<\\s\\s</g, \" << \")\r\n    text = text.replaceAll(/>\\s\\s>/g, \" >> \")\r\n    text = text.replaceAll(/&\\s\\s&/g, \" && \")\r\n    text = text.replaceAll(/\\|\\s\\s\\|/g, \" || \")\r\n\r\n    //Se aisla el operador \".\" menos en numeros\r\n    text = text.replaceAll(/\\.(?=([^\\d]*\"[^\\d]*\\d)*[^\\d]*$)/g, \" . \")\r\n\r\n    //Para eliminar espacios dobles\r\n    text = text.trim();\r\n    text = text.replaceAll(/\\s{2,}/g, \" \");\r\n    //Se separa el texto por espacios\r\n    text = text.match(/[^\\s\"']+|\"[^\"]*\"|'[^']*'/g)\r\n    let listaTokens = []\r\n    text.forEach(tokenizar)\r\n\r\n    function tokenizar(value, index, array) {\r\n        let key\r\n\r\n        console.log(value)\r\n\r\n        if (isCharConst(value)) {\r\n            key = \"Cadena de texto\"\r\n        } else if (isKeyword(value)) {\r\n            key = \"Palabra reservada\"\r\n        } else if (isIdentifier(value)) {\r\n            key = \"Identificador\"\r\n        } else if (isNumConst(value)) {\r\n            key = \"Constante Numerica\"\r\n        } else if (isOperator(value)) {\r\n            key = \"Operador\"\r\n        } else if (isSeparator(value)) {\r\n            key = \"Separador\"\r\n        } else {\r\n            key = \"No encontrado\"\r\n        }\r\n\r\n        listaTokens.push({key: key, value: value})\r\n\r\n    }\r\n    console.log(listaTokens)\r\n    return listaTokens\r\n\r\n}\r\n","export default function isCharConst(word) {\r\n    let aceptacion\r\n    let regex = /(^\"[\\w\\s]+\"$)|(^'[\\w\\s]+'$)/\r\n    aceptacion = regex.test(word)\r\n    return aceptacion;\r\n}\r\n","export default function isKeyword(word) {\r\n    let aceptacion\r\n    let regex = /\\b(?:abstract|else|import|super|as|enum|in|switch|assert|export|interface|sync|async|extends|is|this|await|extensioyarn n|library|throw|break|external|mixin|true|case|factory|new|try|catch|false|null|typedef|class|final|on|var|const|finally|operator|void|continue|For|part|while|covarient|Function|rethrow|with|default|get|return|yield|deffered|hide|set|do|if|show|dynamic|implements|static)\\b/\r\n    aceptacion = regex.test(word)\r\n    return aceptacion;\r\n}\r\n","export default function isIdentifier(word) {\r\n    let aceptacion\r\n    let regex = /^([a-zA-Z_$][a-zA-Z\\\\d_$]*)$/\r\n    aceptacion = regex.test(word)\r\n    return aceptacion;\r\n}\r\n","export default function isNumConst(word) {\r\n    let estado = 0\r\n    let aceptacion\r\n    word = word.split(\"\");\r\n    word.forEach(automaton);\r\n\r\n    function automaton(value, index, array) {\r\n        let symbolo;\r\n        switch (value) {\r\n            case \"0\":\r\n            case \"1\":\r\n            case \"2\":\r\n            case \"3\":\r\n            case \"4\":\r\n            case \"5\":\r\n            case \"6\":\r\n            case \"7\":\r\n            case \"8\":\r\n            case \"9\":\r\n                symbolo = \"d\"\r\n                break;\r\n            case \".\":\r\n                symbolo = \".\"\r\n                break;\r\n            case\"e\":\r\n            case \"E\":\r\n                symbolo = \"E\"\r\n                break;\r\n            case \"-\":\r\n                symbolo = \"s\"\r\n                break;\r\n            default:\r\n                symbolo = \"x\"\r\n                estado = 9\r\n                aceptacion = false\r\n        }\r\n\r\n        switch (estado) {\r\n            case 0:\r\n                switch (symbolo) {\r\n                    case \"d\":\r\n                        estado = 2\r\n                        aceptacion = true\r\n                        break;\r\n                    case \".\":\r\n                        estado = 8\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"E\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"s\":\r\n                        estado = 1\r\n                        aceptacion = false\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                break;\r\n            case 1:\r\n                switch (symbolo) {\r\n                    case \"d\":\r\n                        estado = 2\r\n                        aceptacion = true\r\n                        break;\r\n                    case \".\":\r\n                        estado = 8\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"E\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"s\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                break;\r\n            case 2:\r\n                switch (symbolo) {\r\n                    case \"d\":\r\n                        estado = 2\r\n                        aceptacion = true\r\n                        break;\r\n                    case \".\":\r\n                        estado = 34\r\n                        aceptacion = true\r\n                        break;\r\n                    case \"E\":\r\n                        estado = 5\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"s\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            case 34:\r\n                switch (symbolo) {\r\n                    case \"d\":\r\n                        estado = 34\r\n                        aceptacion = true\r\n                        break;\r\n                    case \".\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"E\":\r\n                        estado = 5\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"s\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            case 5:\r\n                switch (symbolo) {\r\n                    case \"d\":\r\n                        estado = 7\r\n                        aceptacion = true\r\n                        break;\r\n                    case \".\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"E\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"s\":\r\n                        estado = 6\r\n                        aceptacion = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            case 6:\r\n                switch (symbolo) {\r\n                    case \"d\":\r\n                        estado = 7\r\n                        aceptacion = true\r\n                        break;\r\n                    case \".\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"E\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"s\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            case 7:\r\n                switch (symbolo) {\r\n                    case \"d\":\r\n                        estado = 7\r\n                        aceptacion = true\r\n                        break;\r\n                    case \".\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"E\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"s\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            case 8:\r\n                switch (symbolo) {\r\n                    case \"d\":\r\n                        estado = 34\r\n                        aceptacion = true\r\n                        break;\r\n                    case \".\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"E\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"s\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                break;\r\n            case 9:\r\n                switch (symbolo) {\r\n                    case \"d\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \".\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"E\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    case \"s\":\r\n                        estado = 9\r\n                        aceptacion = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    return aceptacion;\r\n}\r\n","export default function isOperator(word) {\r\n    let aceptacion = false\r\n\r\n    if (/\\+/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/-/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\*/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\//.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/~\\//.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/%/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\+\\+/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/--/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/=/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\?\\?=/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\+=/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/-=/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\*=/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\/=/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/<</.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/>>/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/&&/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\|\\|/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/&/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\|/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\^/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/~/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\./.test(word)) {\r\n        aceptacion = true\r\n    }\r\n\r\n    return aceptacion;\r\n\r\n}\r\n","export default function isSeparator(word) {\r\n    let aceptacion = false\r\n    if\r\n    (/\\(/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\)/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\[/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/]/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/\\{/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/}/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/;/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n    if (/,/.test(word)) {\r\n        aceptacion = true\r\n    }\r\n\r\n    return aceptacion;\r\n\r\n}\r\n","import {\r\n    Container,\r\n    Content,\r\n    Row,\r\n    Col\r\n} from 'rsuite';\r\nimport Header from \"../components/Header\"\r\nimport Form from \"../components/Form\"\r\n\r\n\r\nfunction Home({ onSelect, activeKey, ...props }) {\r\n\r\n    const containerStyle = {\r\n        height: \"100%\",\r\n        maxWidth: \"100%\",\r\n        display:   \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: \"5%\"\r\n    };\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Header />\r\n            <Content style={containerStyle}>\r\n                <Col>\r\n                    <Row>\r\n                        <Form/>\r\n                    </Row>\r\n                </Col>\r\n            </Content>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import Home from './pages/home'\r\n\r\nfunction App() {\r\n    return (\r\n            <Home/>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'rsuite/dist/styles/rsuite-default.css'; \nimport App from './App/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}